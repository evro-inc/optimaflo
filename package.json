{
  "name": "OptimaFlo",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "analyze": "cross-env ANALYZE=true next build",
    "build": "next build",
    "build:test": "export NODE_ENV=\"test\" && next build",
    "chromatic": "npx chromatic --project-token=${CHROMATIC_TOKEN}",
    "cypress:open": "env-cmd -f .env.local cypress run --browser chrome",
    "cypress:start": "start-server-and-test 'npm run start:test' 3000 'npm run cypress:open'",
    "cypress:build": "npm run build:test && npm run cypress:start",
    "db:backup": "pg_dump -U evro -W -F t optimaflo_local > ./db/backup.sql",
    "db:restore": "pg_restore -U evro -d optimaflo_local -1 ./db/backup.sql",
    "dev": "next | npx pino-pretty",
    "execute-husky": "npx husky install && npx husky add .husky/pre-commit \"npx --no-install lint-staged\"",
    "pretty": "prettier --config .prettierrc '../**/*.{ts,tsx,js,jsx}' --write",
    "prisma:sandbox": "ENV=sandbox npx prisma generate",
    "prisma:prod": "ENV=production npx prisma generate",
    "start": "next start| npx pino-pretty",
    "start:test": "export NODE_ENV=\"test\" && next start",
    "stripe:listen": "stripe listen --forward-to=localhost:3000/api/webhooks --project-name=saas-starter",
    "lint": "next lint",
    "preview-email": "email dev",
    "test": "npx playwright test",
    "test:ui": "npx playwright test --ui",
    "test:codegen": "npx playwright codegen localhost:3000 --save-storage=auth.example.json",
    "vercel-build": "prisma generate && next build",
    "storybook": "concurrently 'npm run watch:*'",
    "build:storybook": "storybook build",
    "build:tailwind": "npx tailwindcss -i ./src/styles/globals.css -o ./src/styles/tailwind.css",
    "generate:storybook": "npm run build:tailwind && storybook build",
    "storybook:test": "test-storybook",
    "watch:storybook": "storybook dev -p 6006",
    "watch:tailwind": "npx tailwindcss -i ./src/styles/globals.css -o ./src/styles/tailwind.css --watch"
  },
  "dependencies": {
    "@auth/core": "^0.11.1",
    "@google-analytics/admin": "^4.9.0",
    "@hookform/resolvers": "^3.3.1",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@plunk/node": "^2.0.0",
    "@prisma/client": "^5.4.2",
    "@react-email/container": "^0.0.8",
    "@react-email/html": "^0.0.4",
    "@react-email/section": "^0.0.9",
    "@react-email/text": "^0.0.5",
    "@reduxjs/toolkit": "^1.9.6",
    "@sanity/image-url": "^1.0.2",
    "@stripe/stripe-js": "^1.54.0",
    "@supabase/supabase-js": "^2.26.0",
    "@upstash/ratelimit": "^0.4.3",
    "@upstash/redis": "^1.22.0",
    "bottleneck": "^2.19.5",
    "classnames": "^2.3.2",
    "encoding": "^0.1.13",
    "eslint-config-next": "^13.4.7",
    "framer-motion": "^10.15.1",
    "googleapis": "^118.0.0",
    "ioredis": "^5.3.2",
    "joi": "^17.9.2",
    "next": "^14.0.0",
    "next-auth": "^4.23.1",
    "next-sanity": "^5.5.4",
    "next-themes": "^0.2.1",
    "p-throttle": "^5.1.0",
    "pino": "^8.14.1",
    "preline": "^1.9.0",
    "raw-body": "^2.5.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-email": "^1.9.4",
    "react-hook-form": "^7.47.0",
    "react-hot-toast": "^2.4.1",
    "react-merge-refs": "^2.0.2",
    "react-redux": "^8.1.2",
    "recharts": "^2.7.3",
    "sanity": "^3.16.7",
    "server-only": "^0.0.1",
    "sharp": "^0.32.5",
    "stripe": "^13.3.0",
    "styled-components": "^5.3.11",
    "swr": "^2.1.5",
    "tailwindcss": "^3.3.2",
    "ts-node": "^10.9.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@heroicons/react": "^2.0.18",
    "@mswjs/data": "^0.13.0",
    "@next/bundle-analyzer": "^13.5.4",
    "@playwright/test": "^1.36.1",
    "@storybook/addon-a11y": "^7.5.2",
    "@storybook/addon-coverage": "^0.0.9",
    "@storybook/addon-essentials": "^7.5.2",
    "@storybook/addon-interactions": "^7.5.2",
    "@storybook/addon-links": "^7.5.2",
    "@storybook/addon-onboarding": "^1.0.8",
    "@storybook/addon-storyshots": "^7.5.2",
    "@storybook/addon-styling": "^1.3.5",
    "@storybook/blocks": "^7.5.2",
    "@storybook/jest": "^0.1.0",
    "@storybook/nextjs": "^7.5.2",
    "@storybook/react": "^7.5.2",
    "@storybook/test-runner": "^0.12.0",
    "@storybook/testing-library": "^0.2.0",
    "@testing-library/cypress": "^9.0.0",
    "@testing-library/react": "^14.0.0",
    "@types/cypress": "^1.1.3",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.8",
    "@types/react": "^18.2.13",
    "autoprefixer": "^10.4.13",
    "axe-playwright": "^1.2.3",
    "chromatic": "^7.2.0",
    "concurrently": "^8.2.0",
    "critters": "^0.0.20",
    "cross-env": "^7.0.3",
    "env-cmd": "^10.1.0",
    "eslint": "^8.46.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-cypress": "^2.13.3",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-storybook": "^0.6.13",
    "husky": "^8.0.3",
    "jest": "^29.6.1",
    "lint-staged": "^13.2.3",
    "msw": "^1.2.3",
    "next-test-api-route-handler": "^3.1.8",
    "pino-pretty": "^10.2.0",
    "postcss": "^8.4.24",
    "prettier": "^2.8.8",
    "prisma": "^5.4.2",
    "start-server-and-test": "^2.0.0",
    "storybook": "^7.5.2",
    "typescript": "^5.1.3"
  },
  "lint-staged": {
    "**/*.{js,jsx}": [
      "eslint . --fix",
      "prettier --write ."
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "prisma": {
    "seed": "node ./prisma/seed.js"
  },
  "prettier": {
    "arrowParens": "always",
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "none"
  },
  "eslintConfig": {
    "extends": [
      "plugin:storybook/recommended"
    ]
  },
  "readme": "ERROR: No README data found!",
  "_id": "OptimaFlo@0.0.0"
}
